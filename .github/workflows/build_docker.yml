name: CI/CD with SAST

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 2 * * 0'

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python, javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build_and_deploy:
    name: Build & Deploy Docker Images
    runs-on: ubuntu-latest
    needs: codeql
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Deploy Docker Images
        uses: appleboy/ssh-action@master
        env:
          ENV: "development"
        with:
          envs: ENV
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          password: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            echo "Navigating to project directory..."
            cd ~/CTF_Framework_SE || { echo "Failed to change directory"; exit 1; }
            echo "Stashing local changes..."
            git stash || { echo "No local changes to stash or stash failed"; }
            echo "Checking out main branch..."
            git checkout main || { echo "Failed to checkout main branch"; exit 1; }
            echo "Pulling latest changes from GitHub..."
            git pull || { echo "Failed to pull latest changes"; exit 1; }
            echo "Making build scripts executable..."
            chmod +x .script/delete_docker.sh || { echo "Failed to chmod delete_docker.sh"; exit 1; }
            chmod +x .script/build_docker.sh || { echo "Failed to chmod build_docker.sh"; exit 1; }
            echo "Deleting existing Docker containers/images..."
            .script/delete_docker.sh || { echo "delete_docker.sh failed, but continuing..."; }
            echo "Building and starting new Docker images..."
            .script/build_docker.sh || { echo "build_docker.sh failed"; exit 1; }
            echo "Docker build and deployment complete."

      - name: Run Functionality Tests on Deployed Backend
        uses: appleboy/ssh-action@master
        env:
          ENV: "development"
        with:
          envs: ENV
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          password: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            echo "Navigating to project directory for testing..."
            cd ~/CTF_Framework_SE || { echo "Failed to change directory for tests"; exit 1; }
            echo "Executing Django backend tests inside Docker container..."
            docker exec -i softeng_backend python3 manage.py test || { echo "Backend tests failed"; exit 1; }
            echo "Backend tests completed successfully."

